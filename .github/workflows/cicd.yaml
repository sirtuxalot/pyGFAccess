# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ '202*' ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python 3.13.4
      uses: actions/setup-python@v4
      with:
        python-version: "3.13.4"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 access.py models.py --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        python -m flake8 access.py models.py --count --exit-zero --max-complexity=10 --max-line-length=127 --indent-size=2 --ignore=E123,E124,E128,E131,E302,E305 --statistics
#    - name: Test with pytest
#      run: python3 -m pytest -sv tests
    - name: Build and push docker production image
      # https://github.com/mr-smithers-excellent/docker-build-push
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: pygfaccess
        tags: ${{ github.ref_name }}, latest
        #target: prod
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}
